---
- question: >
    What is the highest historical closing stock price of illumina from 2020-2024, and when did it occur?
  answer: |
    SELECT date, close
    FROM ilmn
    WHERE date BETWEEN '2020-01-01' AND '2024-12-31'
    ORDER BY close DESC
    LIMIT 1;

- question: >
    Is there any correlation between Illumina shares and Apple shares?
  answer: |
    WITH 
    -- 1) join the two tables on date
    joined AS (
      SELECT
        i.date,
        i.close AS ilmn_close,
        a.close AS appl_close
      FROM ilmn   i
      JOIN appl  a
        ON i.date = a.date
    ),
    -- 2) compute the counts and sums needed
    agg AS (
      SELECT
        COUNT(*)                        AS n,
        SUM(ilmn_close)                AS sum_x,
        SUM(appl_close)                AS sum_y,
        SUM(ilmn_close * appl_close)   AS sum_xy,
        SUM(ilmn_close * ilmn_close)   AS sum_x2,
        SUM(appl_close * appl_close)   AS sum_y2
      FROM joined    
    )
    SELECT
      -- numerator:  n*Σ(xy) - Σx*Σy
      (agg.n * agg.sum_xy - agg.sum_x * agg.sum_y)
      /
      (
        -- denominator: sqrt([n*Σ(x²) - (Σx)²] * [n*Σ(y²) - (Σy)²])
        sqrt( (agg.n * agg.sum_x2 - agg.sum_x * agg.sum_x)
            * (agg.n * agg.sum_y2 - agg.sum_y * agg.sum_y)
        )
      ) AS correlation
    FROM agg;

- question: >
    What is the longest running uptrend in prices of NVIDIA shares?
  answer: |
    WITH
    -- 1) tag each day as up (1) vs not-up (0)
    diffs AS (
      SELECT
        date,
        close,
        CASE
          WHEN close > LAG(close) OVER (ORDER BY date) THEN 1
          ELSE 0
        END AS is_up
      FROM nvda
    ),

    -- 2) assign an island_id that increments whenever is_up = 0
    islands AS (
      SELECT
        date,
        close,
        is_up,
        SUM(CASE WHEN is_up = 0 THEN 1 ELSE 0 END)
          OVER (ORDER BY date) AS island_id
      FROM diffs
    ),

    -- 3) summarize only the up-days in each island
    up_summary AS (
      SELECT
        island_id,
        MIN(date)   AS start_date,
        MAX(date)   AS end_date,
        COUNT(*)    AS length
      FROM islands
      WHERE is_up = 1
      GROUP BY island_id
    )

    -- 4) pick the longest
    SELECT
      start_date,
      end_date,
      length AS days_in_a_row
    FROM up_summary
    ORDER BY length DESC
    LIMIT 1;
 